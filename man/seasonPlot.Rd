% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seasonPlot.R
\name{seasonPlot}
\alias{seasonPlot}
\title{seasonPlot: Function to Plot Seasonality Patterns of Stock Prices or Cryptocurrencies}
\usage{
seasonPlot(
  Symbols,
  StartYear = lubridate::year(Sys.Date()) - 11,
  EndYear = lubridate::year(Sys.Date()) - 1,
  useAdjusted = FALSE,
  LineColor = 1,
  xlab = "Month",
  BackgroundMode = TRUE,
  alpha = 0.05,
  OutputData = FALSE,
  Save = FALSE,
  output_width = 1000,
  output_height = 700,
  family = "Helvetica",
  PlotAll = FALSE,
  YearMissingThreshold = 366 * 0.5,
  DayMissingThreshold = NULL
)
}
\arguments{
\item{Symbols}{A character string specifying the symbol to retrieve data for. Examples include `^IXIC` 
(NASDAQ Composite), `^DJI` (Dow Jones Industrial Average), `SPY` (SPDR S&P500 ETF), `BTC-USD` (Bitcoin), 
`ETH-USD` (Ethereum), and `XRP-USD` (Ripple).}

\item{StartYear}{A numeric value indicating the starting year (Gregorian calendar) for the data aggregation. 
The default is 11 years prior to the current year.}

\item{EndYear}{A numeric value indicating the ending year (Gregorian calendar) for the data aggregation. 
The default is the previous year.}

\item{useAdjusted}{Logical; if `TRUE`, uses the adjusted closing price (adjusted for dividends and splits). 
If `FALSE`, uses the regular closing price. For cryptocurrencies, using the adjusted price is expected to 
yield the same result.}

\item{LineColor}{A numeric value between 1 and 4 to specify the line color: `1` for red, `2` for blue, 
`3` for green, and `4` for black. This argument is ignored when `BackgroundMode` is `TRUE`.}

\item{xlab}{A character string for the X-axis label. Default is `"Month"`.}

\item{BackgroundMode}{Logical; if `TRUE`, colors the background of each month based on whether the average 
monthly change is positive (green) or negative (red).}

\item{alpha}{A numeric value between 0.0 (fully transparent) and 1.0 (fully opaque) specifying the 
transparency level of the background color.}

\item{OutputData}{Logical; if `TRUE`, returns the data used for plotting as a `data.frame`.}

\item{Save}{Logical; if `TRUE`, saves the plot as a PNG image.}

\item{output_width}{The width of the output image in pixels when `Save` is `TRUE`. Default is 1000.}

\item{output_height}{The height of the output image in pixels when `Save` is `TRUE`. Default is 700.}

\item{family}{A character string specifying the font family for the plot text.}

\item{PlotAll}{Logical; if `TRUE`, displays the entire time series data using 
the `dygraph` function before proceeding to the seasonality plot.}
}
\value{
A seasonality plot of the specified symbol. If `OutputData` is `TRUE`, 
  returns a list containing the symbol and the mean data used for plotting.
}
\description{
The function retrieves price data for a specified symbol, calculates the percentage change 
  from the beginning of each year, and visualizes the seasonality patterns by averaging over multiple years. 
  It plots the average monthly changes and can highlight months with positive or negative growth using background 
  colors. The function automatically excludes years or days with a large amount of missing data to ensure reliable 
  results. Various customization options are available for line color, background mode, font, and more.
}
\examples{
## Plot seasonality of NASDAQ Composite Index (^IXIC)
seasonPlot(Symbols = "^IXIC", useAdjusted = TRUE)

## Plot seasonality of Bitcoin (BTC-USD)
seasonPlot(Symbols = "BTC-USD", StartYear=2015, EndYear=2020)

## Customize and run missing value tolerances
seasonPlot(Symbols = "^IXIC", YearMissingThreshold = 200, DayMissingThreshold = 5)


}
\author{
Satoshi Kume
}
